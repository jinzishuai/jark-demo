hub:
  config:
    Authenticator:
      admin_users:
        - admin1
      allowed_users:
        - user1
        - user2
    # testing only - do not do this for production
    DummyAuthenticator:
      password: never-do-this
    JupyterHub:
      authenticator_class: dummy
proxy:
  service:
    # Use a simple ClusterIP service (use kubectl port-forward to access it)
    type: ClusterIP
    # The following is for AWS NLB service, default type=LoadBalancer
    # annotations:
    # service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    # service.beta.kubernetes.io/aws-load-balancer-scheme: internal # Private Load Balancer can only be accessed within the VPC
    # service.beta.kubernetes.io/aws-load-balancer-type: external
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # service.beta.kubernetes.io/aws-load-balancer-ip-address-type: ipv4
singleuser:
  image:
    name: quay.io/jupyter/pytorch-notebook
    tag: x86_64-latest
    pullPolicy: IfNotPresent
  profileList:
    - display_name: "CPU Python"
      description: "minimal python notebook"
      default: true
      profile_options:
        image:
          display_name: "Image"
          choices:
            pytorch:
              display_name: "PyTorch"
              default: true
              kubespawner_override:
                image: quay.io/jupyter/pytorch-notebook:x86_64-latest
            datascience:
              display_name: "Data Science: Python, R and Julia"
              kubespawner_override:
                image: quay.io/jupyter/datascience-notebook:x86_64-latest
    - display_name: "GPU AI/ML"
      description: "Tensorflow with GPU"
      kubespawner_override:
        image: cschranz/gpu-jupyter:v1.5_cuda-12.0_ubuntu-22.04 # See https://github.com/iot-salzburg/gpu-jupyter for more details
        extra_resource_limits:
          nvidia.com/gpu: "1"
        mem_guarantee: "13G" # fits in g5.xlarge which has 16 GB RAM in total
  cmd: null
  startTimeout: 600
  memory:
    guarantee: 4G
  extraEnv:
    HUGGING_FACE_HUB_TOKEN:
      valueFrom:
        secretKeyRef:
          name: hf-token
          key: token
  storage:
    capacity: 100Gi
    extraVolumes:
      - name: shm-volume
        emptyDir:
          medium: Memory
      - name: notebook
        configMap:
          name: notebook
      - name: efs
        persistentVolumeClaim:
          claimName: efs-claim
    extraVolumeMounts:
      - name: shm-volume
        mountPath: /dev/shm
      - name: notebook
        mountPath: /home/jovyan/dogbooth
      - name: efs
        mountPath: /home/jovyan/efs
scheduling:
  userScheduler:
    enabled: false
cull:
  timeout: 600
  every: 60
  users: true
  adminUsers: true
prePuller:
  hook:
    enabled: false
